@model  TicketTracker.Models.TaskViewModel
@{
    ViewBag.Title = "Task View";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("TaskView", "Home", FormMethod.Post, new { name = "Form" }))
{
    @Html.AntiForgeryToken()
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">@Html.EditorFor(model => model.name, new { htmlAttributes = new { @placeholder = "@Model.name" } })</h1>
        <div>
        @{ var DeleteActionID = "TaskView_" + Model.id + "_" + Model.id + "_Delete_0";}
        <a href="@Url.Action("Action", "Home", new  { id =  DeleteActionID})" class="btn btn-danger btn-circle btn-lg">
            <i class="fas fa-trash"></i>
        </a>
        <button type="submit" class="btn btn-primary btn-circle btn-lg"> 
            <i class="fas fa-save" id="SaveButton"></i>
        </button>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Summary</h6>
                </div>
                <div class="card-body">
                    @{ 
                        if (Model.id != 0)
                        {
                            var ProgressClass = Model.progressClass[Array.IndexOf(Model.progressDef, Model.progress)];
                            var btnProgressClass = "btn " + ProgressClass + " dropdown-toggle";
                            <div class="dropdown mb-4">

                                <button class="@btnProgressClass" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    @Model.progress
                                </button>
                                <div class="dropdown-menu animated--fade-in" aria-labelledby="dropdownMenuButton">
                                    @{
                                        for (int i = 0; i < Model.progressDef.Length; i++)
                                        {
                                            var ThisProgressClass = Model.progressClass[i];
                                            var ThisBtnProgressClass = "btn " + ThisProgressClass + " btn-icon-split";
                                            var ProgressActionID = "TaskView_" + Model.id + "_" + Model.id + "_ProgressEdit_" + Model.progressDef[i];
                                            <a class="dropdown-item" href="@Url.Action("Action", "Home", new { id = ProgressActionID })">
                                                <b class="@ThisBtnProgressClass">
                                                    <span class="text">@Model.progressDef[i]</span>
                                                 </b>
                                            </a>
                                        }
                                    }
                                </div>
                            </div>
                            }
                        }
                    <p></p>
                    <p><div>Created By: </div><div>@Html.EditorFor(model => model.created_by, new { htmlAttributes = new { @class = "form-control", @placeholder = "@Model.created_by" } })</div></p>
                    <p><div>Created At: </div><div>@Html.EditorFor(model => model.date_created, new { htmlAttributes = new { @class = "form-control", @placeholder = "@Model.date_created" } })</div></p>
                    <p><div>Assigned To: </div><div>@Html.EditorFor(model => model.assigned_to, new { htmlAttributes = new { @class = "form-control", @placeholder = "@Model.assigned_to" } })</div></p>
                </div>
            </div>
        </div>
        <div class="col-lg-6 mb-4">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Description</h6>
                </div>
                <div class="card-body">
                    @Html.TextAreaFor(model => model.description, 12, 40, new {  @class = "form-control", @placeholder = "@Model.description"} )
                </div>
            </div>
        </div>
    </div>
}
<hr />
<div class="row">
    <div class="col-lg-6 mb-4">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">History</h6>
            </div>
            <div class="card-body" contenteditable="false">
                @{
                    for (int i = 0; i < Model.taskHistories.Count(); i++)
                    {
                        <p>@Model.taskHistories.ElementAt(i).user_id at @Model.taskHistories.ElementAt(i).Action_DT</p>
                        <p>@Model.taskHistories.ElementAt(i).action</p>
                        <hr />
                    }
                }
            </div>
        </div>
    </div>
    <div class="col-lg-6 mb-4">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Comments</h6>
            </div>
            <div class="card-body">
                @{
                    for (int i = 0; i < Model.comments.Count(); i++)
                    {
                        <p>@Model.comments.ElementAt(i).User_ID at @Model.comments.ElementAt(i).Created_DT</p>
                        <p>@Model.comments.ElementAt(i).Comment</p>
                        <hr />
                    }
                }
            </div>
        </div>
    </div>
</div>